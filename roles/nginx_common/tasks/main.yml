---
# tasks file
  - name: Install nginx package
    ansible.builtin.package:
      name: "nginx"
      state: present

  - name: Set nginx_user for nginx (Debian)
    set_fact:
      nginx_user: "www-data"
    when:
    - ansible_os_family == "Debian"

  - name: Set nginx_group for nginx (Debian)
    set_fact:
      nginx_group: "www-data"
    when:
    - ansible_os_family == "Debian"

  - name: Ensure ssl private directory exists
    ansible.builtin.file:
      path: "{{ nginx_ssl_private_directory }}"
      state: directory
      owner: root
      group: root
      mode: "0700"

  - name: Ensure snippet directory exists
    ansible.builtin.file:
      path: "{{ nginx_snippet_directory }}"
      state: directory
      owner: "{{ nginx_user }}"
      group: "{{ nginx_group }}"
      mode: "0750"

  - name: Nginx TLS hardening
    ansible.builtin.template:
      src: "{{ nginx_tls_hardening_template }}"
      dest: "{{ nginx_tls_hardening_snippet }}"
      mode: "0600"

#  - name: Check if DH file exists
#    ansible.builtin.stat:
#      path: "{{ nginx_dh_filename }}"
#    register: nginx_dh_file

#  - name: Generate DH Parameters
#    ansible.builtin.command: openssl dhparam -outform PEM -out {{ nginx_dh_filename }} {{ nginx_dh_size }}
#    when: not nginx_dh_file.stat.exists

  - name: Generate DH Parameters (will take a while!)
    community.crypto.openssl_dhparam:
      path: "{{ nginx_dh_filename }}"
      size: "{{ nginx_dh_size }}"

  - name: Generate DH Parameters
    ansible.builtin.file:
      path: "{{ nginx_dh_filename }}"
      owner: root
      group: root
      mode: "0600"
