---
# tasks file for roles/vaultwarden

- name: Include OS-specific variables
  ansible.builtin.include_vars: "vars-{{ ansible_os_family }}.yml"
  tags:
    - always

- name: Create directory structure
  ansible.builtin.file:
    owner: root
    group: root
    mode: '0750'
    path: "{{ item }}"
    state: directory
  become: true
  loop:
    - "{{ vaultwarden_project_src }}"
    - "{{ vaultwarden_project_src }}/data"

- name: Clone vaultwarden repo
  ansible.builtin.git:
    clone: true
    dest: "{{ vaultwarden_project_src }}/repo"
    force: true
    repo: "{{ vaultwarden_git_src }}"
    update: true
    version: "{{ vaultwarden_version | default(omit) }}"
  notify:
    - Build vaultwarden

- name: Install Docker SDK for Python
  ansible.builtin.pip:
    name:
      - docker
      - docker-compose

- name: Include Epel Role for RedHat-Family
  ansible.builtin.include_role:
    name: geerlingguy.repo-epel
  when:
    - vaultwarden_epel_include_role|bool
    - ansible_os_family == 'RedHat'

- name: Install argon2 package
  ansible.builtin.package:
    name: argon2
  become: true

- name: Hash vaultwarden_admin_token into argon2 and escape for docker-compose
  ansible.builtin.shell: echo -n {{ vaultwarden_admin_token }} | argon2 {{ lookup('password', '/dev/null length=32 chars=ascii_letters') }} -e -id -k 65540 -t 3 -p 4 | sed 's#\$#\$\$#g'
  args:
    executable: /bin/bash
  register: vaultwarden_admin_token_argon2
  no_log: true

- name: Template docker-compose file
  ansible.builtin.template:
    dest: "{{ vaultwarden_project_src }}/docker-compose.yml"
    owner: root
    group: root
    mode: '0640'
    src: "{{ vaultwarden_docker_template }}"
  notify:
    - Restart vaultwarden

#- name: Link Dockerfile
#  ansible.builtin.file:
#    src: "{{ vaultwarden_project_src }}/repo/Dockerfile"
#    dest: "{{ vaultwarden_project_src }}/Dockerfile"
#    state: link

- name: Remove default config (when enabled)
  ansible.builtin.file:
    path: "{{ vaultwarden_nginx_default_config }}"
    state: absent
  become: true
  notify: Restart nginx
  when:
    - vaultwarden_nginx_remove_default_config
    - ansible_os_family == 'Debian'

- name: Ensure nginx config is present
  ansible.builtin.template:
    dest: "{{ vaultwarden_nginx_config_src_dir }}/{{ vaultwarden_nginx_config_filename }}"
    owner: root
    group: root
    mode: "0644"
    src: "{{ vaultwarden_nginx_template }}"
  become: true
  notify: Reload nginx

- name: Enable nginx config via symbolic link
  ansible.builtin.file:
    src: "{{ vaultwarden_nginx_config_src_dir }}/{{ vaultwarden_nginx_config_filename }}"
    dest: "{{ vaultwarden_nginx_config_dst_dir }}/{{ vaultwarden_nginx_config_filename }}"
    state: link
  become: true
  notify: Reload nginx
  when:
    - ansible_os_family == 'Debian'
