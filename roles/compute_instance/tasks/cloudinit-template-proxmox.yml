---
# source:  https://forum.proxmox.com/threads/regenerate-cloud-init-image-using-ansible.89964/

- name: Create download directory
  ansible.builtin.file:
    path: "{{ cloudinit_download_folder }}"
    owner: root
    group: root
    mode: '700'
    state: directory

- name: Set fact cloudinit_download_destination
  ansible.builtin.set_fact:
    cloudinit_download_url: "{{ item.value.url }}"
    cloudinit_download_destination: "{{ cloudinit_download_folder }}/{{ item.key }}-{{ cloudinit_download_filename }}"
    cloudinit_download_checksum: "{{ item.value.hash_algorithm + ':' + item.value.hash_checksum_file if item.value.hash_algorithm != 'none' }}"
  when:
    - cloudinit_download_image
    - item.key == compute_instance_distribution
  loop: "{{ lookup('dict', cloudinit_images) }}"

- name: Download cloud image
  ansible.builtin.get_url:
    url: "{{ cloudinit_download_url }}"
    checksum: "{{ cloudinit_download_checksum if cloudinit_download_checksum is defined else omit }}"
    dest: "{{ cloudinit_download_destination }}"
    force: "{{ cloudinit_download_overwrite }}"
  when:
    - cloudinit_download_image

- name: Destroy old cloud-init template
  community.general.proxmox_kvm:
    name: "{{ compute_instance_cloudinit_image }}"
    state: absent
    api_user: "{{ proxmox_api_user }}"
    api_password: "{{ proxmox_api_pass }}"
    api_host: "{{ proxmox_api_host }}"
  when:
    - compute_instance_cloudinit_image_destroy_old

- name: Create empty VM for cloud-init
  community.general.proxmox_kvm:
    node: "{{ proxmox_create_node | default(proxmox_create_node_ansible) }}"
    name: "{{ compute_instance_cloudinit_image }}"
    description: "{{ cloudinit_template_description }}"
    pool: "{{ proxmox_pool | default(omit) }}"
    # boot: c
    # bootdisk: "{{ proxmox_vm_bootdisk }}"
    ide:
      ide2: "none,media=cdrom"
    scsihw: "{{ proxmox_vm_scsihw }}"
    ostype: "{{ proxmox_vm_ostype }}"
    timeout: "{{ proxmox_task_timeout }}"
    serial:
      serial0: socket
    # not needed here
    #net:
    #  net0: '{{ proxmox_net_config }}'
    api_user: "{{ proxmox_api_user }}"
    api_password: "{{ proxmox_api_pass }}"
    api_host: "{{ proxmox_api_host }}"
  register: proxvm

- name: Import downloaded cloud image as disk # noqa no-changed-when
  ansible.builtin.command: "qm importdisk {{ proxvm.vmid }} {{ cloudinit_download_destination }} {{ compute_instance_storage }}"
  register: prox_import_result

- name: Parse name of disk (imported cloud image)
  ansible.builtin.set_fact:
    # stdout of "qm importdisk" has the last line "Successfully imported disk as 'unused0:this_is_what_i_need'
    proxmox_imported_disk_name: "{{ prox_import_result.stdout | split | last | replace(\"'\",'') | regex_replace('unused[0-9]:') }}"

- name: Remove downloaded cloud image
  ansible.builtin.file:
    path: "{{ cloudinit_download_destination }}"
    state: absent
  when:
    - cloudinit_remove_downloaded_image

- name: Attach cloud-init disk (currently unused0) to instance # noqa no-changed-when
  ansible.builtin.command: "qm set {{ proxvm.vmid }} --{{ proxmox_vm_diskdevice }} {{ proxmox_imported_disk_name }}"

- name: Convert cloud-init VM to template
  community.general.proxmox_kvm:
    node: "{{ proxmox_create_node | default(proxmox_create_node_ansible) }}"
    name: "{{ compute_instance_cloudinit_image }}"
    template: true
    update: true
    api_user: "{{ proxmox_api_user }}"
    api_password: "{{ proxmox_api_pass }}"
    api_host: "{{ proxmox_api_host }}"
