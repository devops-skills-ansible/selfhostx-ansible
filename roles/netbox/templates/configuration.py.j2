{{ ansible_managed|comment }}

#########################
#                       #
#   Required settings   #
#                       #
#########################

# This is a list of valid fully-qualified domain names (FQDNs) for the NetBox server. NetBox will not permit write
# access to the server via any other hostnames. The first FQDN in the list will be treated as the preferred name.
#
# FIXME
# Example: ALLOWED_HOSTS = ['netbox.example.com', 'netbox.internal.local']
ALLOWED_HOSTS = ['{{ netbox_allowed_hosts }}']

# PostgreSQL database configuration.
DATABASE = {
    'ENGINE': 'django.db.backends.postgresql',  # Database engine
    'NAME': '{{ netbox_db_name }}',         # Database name
    'USER': '{{ netbox_db_user }}',         # PostgreSQL username
    'PASSWORD': '{{ netbox_db_password }}',   # PostgreSQL password
    'HOST': '{{ netbox_db_host }}',         # Database server
    'PORT': '{{ netbox_db_port }}',         # Database port (leave blank for default)
    'CONN_MAX_AGE': {{ netbox_db_conn_max_age }},      # Max database connection age
}

# Redis database settings. Redis is used for caching and for queuing background tasks such as webhook events. A separate
# configuration exists for each. Full connection details are required in both sections, and it is strongly recommended
# to use two separate database IDs.
REDIS = {
    'tasks': {
{% if not netbox_redis_sentinel_enable %}
        'HOST': '{{ netbox_redis_host }}',
        'PORT': {{ netbox_redis_port }},
{% else %}
        'SENTINELS': [('{{ netbox_redis_sentinel_host }}', {{ netbox_redis_sentinel_port }})],
        'SENTINEL_SERVICE': '{{ netbox_redis_sentinel_service }}',
{% endif %}
        'USERNAME': '{{ netbox_redis_username }}',
        'PASSWORD': '{{ netbox_redis_password }}',
        'DATABASE': 0,
        'SSL': {{ netbox_redis_ssl }},
    },
    'caching': {
{% if not netbox_redis_sentinel_enable %}
        'HOST': '{{ netbox_redis_host }}',
        'PORT': {{ netbox_redis_port }},
{% else %}
        # Comment out `HOST` and `PORT` lines and uncomment the following if using Redis Sentinel
        'SENTINELS': [('{{ netbox_redis_sentinel_host }}', {{ netbox_redis_sentinel_port }})],
        'SENTINEL_SERVICE': '{{ netbox_redis_sentinel_service }}',
{% endif %}
        'USERNAME': '{{ netbox_redis_username }}',
        'PASSWORD': '{{ netbox_redis_password }}',
        'DATABASE': 1,
        'SSL': {{ netbox_redis_ssl }},
    }
}

# This key is used for secure generation of random numbers and strings. It must never be exposed outside of this file.
# For optimal security, SECRET_KEY should be at least 50 characters in length and contain a mix of letters, numbers, and
# symbols. NetBox will not run without this defined. For more information, see
# https://docs.djangoproject.com/en/dev/ref/settings/#std:setting-SECRET_KEY
SECRET_KEY = '{{ netbox_secret_key }}'

#########################
#                       #
#   Optional settings   #
#                       #
#########################

# Specify one or more name and email address tuples representing NetBox administrators. These people will be notified of
# application errors (assuming correct email settings are provided).
ADMINS = [
    # ('John Doe', 'jdoe@example.com'),
]

# Optionally display a persistent banner at the top and/or bottom of every page. HTML is allowed. To display the same
# content in both banners, define BANNER_TOP and set BANNER_BOTTOM = BANNER_TOP.
BANNER_TOP = '{{ netbox_banner_top }}'
BANNER_BOTTOM = '{{ netbox_banner_bottom }}'

# Text to include on the login page above the login form. HTML is allowed.
BANNER_LOGIN = '{{ netbox_banner_login }}'

{% if netbox_base_path is defined %}
# Base URL path if accessing NetBox within a directory. For example, if installed at http://example.com/netbox/, set:
# BASE_PATH = 'netbox/'
BASE_PATH = '{{ netbox_base_path }}'
{% endif %}

# Maximum number of days to retain logged changes. Set to 0 to retain changes indefinitely. (Default: 90)
CHANGELOG_RETENTION = {{ netbox_changelog_retention }}

# Email settings
EMAIL = {
    'SERVER': '{{ netbox_email_server }}',
    'PORT': {{ netbox_email_port }},
    'USERNAME': '{{ netbox_email_username }}',
    'PASSWORD': '{{ netbox_email_password }}',
    'TIMEOUT': {{ netbox_email_timeout }},  # seconds
    'FROM_EMAIL': '{{ netbox_email_from_email }}',
}

{% if netbox_http_proxy is defined or netbox_https_proxy is defined %}
# HTTP proxies NetBox should use when sending outbound HTTP requests (e.g. for webhooks).
HTTP_PROXIES = {
    'http': '{{ netbox_http_proxy }}',
    'https': '{{ netbox_https_proxy }}',
}
{% endif %}

# Setting this to True will permit only authenticated users to access any part of NetBox. By default, anonymous users
# are permitted to access most data in NetBox (excluding secrets) but not make any changes.
LOGIN_REQUIRED = {{ netbox_login_required }}

# The length of time (in seconds) for which a user will remain logged into the web UI before being prompted to
# re-authenticate. (Default: 1209600 [14 days])
# LOGIN_TIMEOUT = None
LOGIN_TIMEOUT = {{ netbox_login_timeout }}

# An API consumer can request an arbitrary number of objects =by appending the "limit" parameter to the URL (e.g.
# "?limit=1000"). This setting defines the maximum limit. Setting it to 0 or None will allow an API consumer to request
# all objects by specifying "?limit=0".
MAX_PAGE_SIZE = {{ netbox_max_page_size }}

# The file path where uploaded media such as image attachments are stored. A trailing slash is not needed. Note that
# the default value of this setting is derived from the installed location.
# MEDIA_ROOT = '/opt/netbox/netbox/media'
MEDIA_ROOT = '{{ netbox_media_root }}'

# Enable installed plugins. Add the name of each plugin to the list.
PLUGINS = []

# Plugins configuration settings. These settings are used by various plugins that the user may have installed.
# Each key in the dictionary is the name of an installed plugin and its value is a dictionary of settings.
# PLUGINS_CONFIG = {
#     'my_plugin': {
#         'foo': 'bar',
#         'buzz': 'bazz'
#     }
# }
# PLUGINS_CONFIG = json.loads('''{{ netbox_plugins_config | to_nice_json }}''')

# This determines how often the GitHub API is called to check the latest release of NetBox. Must be at least 1 hour.
RELEASE_CHECK_TIMEOUT = {{ netbox_release_check_timeout }}

# This repository is used to check whether there is a new release of NetBox available. Set to None to disable the
# version check or use the URL below to check for release in the official NetBox repository.
# RELEASE_CHECK_URL = None
RELEASE_CHECK_URL = '{{ netbox_release_check_url }}'

# The file path where custom reports will be stored. A trailing slash is not needed. Note that the default value of
# this setting is derived from the installed location.
REPORTS_ROOT = '{{ netbox_reports_root }}'

# The file path where custom scripts will be stored. A trailing slash is not needed. Note that the default value of
# this setting is derived from the installed location. Default: /opt/netbox/netbox/scripts
SCRIPTS_ROOT = '{{ netbox_scripts_root }}'

# Time zone (default: UTC)
TIME_ZONE = '{{ netbox_time_zone }}'

# Date/time formatting. See the following link for supported formats:
# https://docs.djangoproject.com/en/stable/ref/templates/builtins/#date
DATE_FORMAT = '{{ netbox_date_format }}'
SHORT_DATE_FORMAT = '{{ netbox_short_date_format }}'
TIME_FORMAT = '{{ netbox_time_format }}'
SHORT_TIME_FORMAT = '{{ netbox_short_time_format }}'
DATETIME_FORMAT = '{{ netbox_datetime_format }}'
SHORT_DATETIME_FORMAT = '{{ netbox_short_datetime_format }}'

# Determine how many objects to display per page within a list. (Default: 50)
PAGINATE_COUNT = {{ netbox_paginate_count }}

{{ netbox_extra_config }}
